{"Type Definitions.html#/c:MQTTSession.h@T@MQTTConnectHandler":{"name":"MQTTConnectHandler","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MQTTSession.h@T@MQTTDisconnectHandler":{"name":"MQTTDisconnectHandler","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MQTTSession.h@T@MQTTSubscribeHandler":{"name":"MQTTSubscribeHandler","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MQTTSession.h@T@MQTTUnsubscribeHandler":{"name":"MQTTUnsubscribeHandler","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MQTTSession.h@T@MQTTPublishHandler":{"name":"MQTTPublishHandler","abstract":"<p>Undocumented</p>"},"Protocols/MQTTTransportDelegate.html#/c:objc(pl)MQTTTransportDelegate(im)mqttTransport:didReceiveMessage:":{"name":"-mqttTransport:didReceiveMessage:","abstract":"<p>didReceiveMessage gets called when a message was received</p>","parent_name":"MQTTTransportDelegate"},"Protocols/MQTTTransportDelegate.html#/c:objc(pl)MQTTTransportDelegate(im)mqttTransportDidOpen:":{"name":"-mqttTransportDidOpen:","abstract":"<p>mqttTransportDidOpen gets called when a transport is successfully opened</p>","parent_name":"MQTTTransportDelegate"},"Protocols/MQTTTransportDelegate.html#/c:objc(pl)MQTTTransportDelegate(im)mqttTransport:didFailWithError:":{"name":"-mqttTransport:didFailWithError:","abstract":"<p>didFailWithError gets called when an error was detected on the transport</p>","parent_name":"MQTTTransportDelegate"},"Protocols/MQTTTransportDelegate.html#/c:objc(pl)MQTTTransportDelegate(im)mqttTransportDidClose:":{"name":"-mqttTransportDidClose:","abstract":"<p>mqttTransportDidClose gets called when the transport closed</p>","parent_name":"MQTTTransportDelegate"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)queue":{"name":"queue","abstract":"<p>queue The queue where the streams are scheduled.</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)streamSSLLevel":{"name":"streamSSLLevel","abstract":"<p>streamSSLLevel an NSString containing the security level for read and write streams</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)host":{"name":"host","abstract":"<p>host an NSString containing the hostName or IP address of the host to connect to</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)port":{"name":"port","abstract":"<p>port an unsigned 32 bit integer containing the IP port number to connect to</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)delegate":{"name":"delegate","abstract":"<p>MQTTTransportDelegate needs to be set to a class implementing th MQTTTransportDelegate protocol</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(py)state":{"name":"state","abstract":"<p>state contains the current MQTTTransportState of the transport</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(im)open":{"name":"-open","abstract":"<p>open opens the transport and prepares it for communication</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(im)send:":{"name":"-send:","abstract":"<p>send transmits a data message</p>","parent_name":"MQTTTransport"},"Protocols/MQTTTransport.html#/c:objc(pl)MQTTTransport(im)close":{"name":"-close","abstract":"<p>close closes the transport</p>","parent_name":"MQTTTransport"},"Protocols/MQTTSessionManagerDelegate.html#/c:objc(pl)MQTTSessionManagerDelegate(im)handleMessage:onTopic:retained:":{"name":"-handleMessage:onTopic:retained:","abstract":"<p>gets called when a new message was received</p>","parent_name":"MQTTSessionManagerDelegate"},"Protocols/MQTTSessionManagerDelegate.html#/c:objc(pl)MQTTSessionManagerDelegate(im)sessionManager:didReceiveMessage:onTopic:retained:":{"name":"-sessionManager:didReceiveMessage:onTopic:retained:","abstract":"<p>gets called when a new message was received</p>","parent_name":"MQTTSessionManagerDelegate"},"Protocols/MQTTSessionManagerDelegate.html#/c:objc(pl)MQTTSessionManagerDelegate(im)messageDelivered:":{"name":"-messageDelivered:","abstract":"<p>gets called when a published message was actually delivered</p>","parent_name":"MQTTSessionManagerDelegate"},"Protocols/MQTTSessionManagerDelegate.html#/c:objc(pl)MQTTSessionManagerDelegate(im)sessionManager:didDeliverMessage:":{"name":"-sessionManager:didDeliverMessage:","abstract":"<p>gets called when a published message was actually delivered</p>","parent_name":"MQTTSessionManagerDelegate"},"Protocols/MQTTSessionManagerDelegate.html#/c:objc(pl)MQTTSessionManagerDelegate(im)sessionManager:didChangeState:":{"name":"-sessionManager:didChangeState:","abstract":"<p>gets called when the connection status changes</p>","parent_name":"MQTTSessionManagerDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)newMessage:data:onTopic:qos:retained:mid:":{"name":"-newMessage:data:onTopic:qos:retained:mid:","abstract":"<p>gets called when a new message was received</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)newMessageWithFeedback:data:onTopic:qos:retained:mid:":{"name":"-newMessageWithFeedback:data:onTopic:qos:retained:mid:","abstract":"<p>gets called when a new message was received</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)session:newMessage:onTopic:":{"name":"-session:newMessage:onTopic:","abstract":"<p>for mqttio-OBJC backward compatibility</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)handleEvent:event:error:":{"name":"-handleEvent:event:error:","abstract":"<p>gets called when a connection is established, closed or a problem occurred</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)session:handleEvent:":{"name":"-session:handleEvent:","abstract":"<p>for mqttio-OBJC backward compatibility</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)connected:":{"name":"-connected:","abstract":"<p>gets called when a connection has been successfully established</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)connected:sessionPresent:":{"name":"-connected:sessionPresent:","abstract":"<p>gets called when a connection has been successfully established</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)connectionRefused:error:":{"name":"-connectionRefused:error:","abstract":"<p>gets called when a connection has been refused</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)connectionClosed:":{"name":"-connectionClosed:","abstract":"<p>gets called when a connection has been closed</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)connectionError:error:":{"name":"-connectionError:error:","abstract":"<p>gets called when a connection error happened</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)protocolError:error:":{"name":"-protocolError:error:","abstract":"<p>gets called when an MQTT protocol error happened</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)messageDelivered:msgID:":{"name":"-messageDelivered:msgID:","abstract":"<p>gets called when a published message was actually delivered</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)messageDelivered:msgID:topic:data:qos:retainFlag:":{"name":"-messageDelivered:msgID:topic:data:qos:retainFlag:","abstract":"<p>gets called when a published message was actually delivered</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)subAckReceived:msgID:grantedQoss:":{"name":"-subAckReceived:msgID:grantedQoss:","abstract":"<p>gets called when a subscription is acknowledged by the MQTT broker</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)unsubAckReceived:msgID:":{"name":"-unsubAckReceived:msgID:","abstract":"<p>gets called when an unsubscribe is acknowledged by the MQTT broker</p>","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)sending:type:qos:retained:duped:mid:data:":{"name":"-sending:type:qos:retained:duped:mid:data:","abstract":"<p>gets called when a command is sent to the MQTT broker","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)received:type:qos:retained:duped:mid:data:":{"name":"-received:type:qos:retained:duped:mid:data:","abstract":"<p>gets called when a command is received from the MQTT broker","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)ignoreReceived:type:qos:retained:duped:mid:data:":{"name":"-ignoreReceived:type:qos:retained:duped:mid:data:","abstract":"<p>gets called when a command is received from the MQTT broker","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)buffered:queued:flowingIn:flowingOut:":{"name":"-buffered:queued:flowingIn:flowingOut:","abstract":"<p>gets called when the content of MQTTClients internal buffers change","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTSessionDelegate.html#/c:objc(pl)MQTTSessionDelegate(im)buffered:flowingIn:flowingOut:":{"name":"-buffered:flowingIn:flowingOut:","abstract":"<p>gets called when the content of MQTTClients internal buffers change","parent_name":"MQTTSessionDelegate"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(py)maxWindowSize":{"name":"maxWindowSize","abstract":"<p>The maximum Window Size for outgoing inflight messages per clientID. Defaults to 16</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(py)maxMessages":{"name":"maxMessages","abstract":"<p>The maximum number of messages kept per clientID and direction. Defaults to 1024</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(py)persistent":{"name":"persistent","abstract":"<p>Indicates if the persistence implementation should make the information permannent. Defaults to NO</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(py)maxSize":{"name":"maxSize","abstract":"<p>The maximum size of the storage used for persistence in total in bytes. Defaults to 1024*1024 bytes</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)windowSize:":{"name":"-windowSize:","abstract":"<p>The current Window Size for outgoing inflight messages per clientID.</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)storeMessageForClientId:topic:data:retainFlag:qos:msgId:incomingFlag:commandType:deadline:":{"name":"-storeMessageForClientId:topic:data:retainFlag:qos:msgId:incomingFlag:commandType:deadline:","abstract":"<p>Stores one new message</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)deleteFlow:":{"name":"-deleteFlow:","abstract":"<p>Deletes an MQTTFlow element</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)deleteAllFlowsForClientId:":{"name":"-deleteAllFlowsForClientId:","abstract":"<p>Deletes all MQTTFlow elements of a clientId</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)allFlowsforClientId:incomingFlag:":{"name":"-allFlowsforClientId:incomingFlag:","abstract":"<p>Retrieves all MQTTFlow elements of a clientId and direction</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)flowforClientId:incomingFlag:messageId:":{"name":"-flowforClientId:incomingFlag:messageId:","abstract":"<p>Retrieves an MQTTFlow element</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTPersistence.html#/c:objc(pl)MQTTPersistence(im)sync":{"name":"-sync","abstract":"<p>sync is called to allow the MQTTPersistence implemetation to save data permanently</p>","parent_name":"MQTTPersistence"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)clientId":{"name":"clientId","abstract":"<p>The clientID of the flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)incomingFlag":{"name":"incomingFlag","abstract":"<p>The flag indicating incoming or outgoing flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)retainedFlag":{"name":"retainedFlag","abstract":"<p>The flag indicating if the flow element is retained</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)commandType":{"name":"commandType","abstract":"<p>The MQTTCommandType of the flow element, might be MQTT_None for offline queueing</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)qosLevel":{"name":"qosLevel","abstract":"<p>The MQTTQosLevel of the flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)messageId":{"name":"messageId","abstract":"<p>The messageId of the flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)topic":{"name":"topic","abstract":"<p>The topic of the flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)data":{"name":"data","abstract":"<p>The data of the flow element</p>","parent_name":"MQTTFlow"},"Protocols/MQTTFlow.html#/c:objc(pl)MQTTFlow(py)deadline":{"name":"deadline","abstract":"<p>The deadline of the flow elelment before (re)trying transmission</p>","parent_name":"MQTTFlow"},"Protocols/MQTTDecoderDelegate.html#/c:objc(pl)MQTTDecoderDelegate(im)decoder:didReceiveMessage:":{"name":"-decoder:didReceiveMessage:","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderDelegate"},"Protocols/MQTTDecoderDelegate.html#/c:objc(pl)MQTTDecoderDelegate(im)decoder:handleEvent:error:":{"name":"-decoder:handleEvent:error:","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderDelegate"},"Protocols/MQTTCFSocketEncoderDelegate.html#/c:objc(pl)MQTTCFSocketEncoderDelegate(im)encoderDidOpen:":{"name":"-encoderDidOpen:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderDelegate"},"Protocols/MQTTCFSocketEncoderDelegate.html#/c:objc(pl)MQTTCFSocketEncoderDelegate(im)encoder:didFailWithError:":{"name":"-encoder:didFailWithError:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderDelegate"},"Protocols/MQTTCFSocketEncoderDelegate.html#/c:objc(pl)MQTTCFSocketEncoderDelegate(im)encoderdidClose:":{"name":"-encoderdidClose:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderDelegate"},"Protocols/MQTTCFSocketDecoderDelegate.html#/c:objc(pl)MQTTCFSocketDecoderDelegate(im)decoder:didReceiveMessage:":{"name":"-decoder:didReceiveMessage:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderDelegate"},"Protocols/MQTTCFSocketDecoderDelegate.html#/c:objc(pl)MQTTCFSocketDecoderDelegate(im)decoderDidOpen:":{"name":"-decoderDidOpen:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderDelegate"},"Protocols/MQTTCFSocketDecoderDelegate.html#/c:objc(pl)MQTTCFSocketDecoderDelegate(im)decoder:didFailWithError:":{"name":"-decoder:didFailWithError:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderDelegate"},"Protocols/MQTTCFSocketDecoderDelegate.html#/c:objc(pl)MQTTCFSocketDecoderDelegate(im)decoderdidClose:":{"name":"-decoderdidClose:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveTagResponsePacket:tagReceived:":{"name":"-didReceiveTagResponsePacket:tagReceived:","abstract":"<p>This will be triggered when reader receives a new tag response during its operations</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didTriggerKeyChangedState:keyState:":{"name":"-didTriggerKeyChangedState:keyState:","abstract":"<p>This will be triggered when the trigger key on the reader has chagned state (pressed/released)</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveBatteryLevelIndicator:batteryPercentage:":{"name":"-didReceiveBatteryLevelIndicator:batteryPercentage:","abstract":"<p>This will be triggered when reader receives battery level notification on every 5 seconds</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveBarcodeData:scannedBarcode:":{"name":"-didReceiveBarcodeData:scannedBarcode:","abstract":"<p>This will be triggered when a barcode is being scanned</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveTagAccessData:tagReceived:":{"name":"-didReceiveTagAccessData:tagReceived:","abstract":"<p>This will be triggered when reader receives a tag access response during its operations</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleInterfaceDelegate.html#/c:objc(pl)CSLBleInterfaceDelegate(im)didInterfaceChangeConnectStatus:":{"name":"-didInterfaceChangeConnectStatus:","abstract":"<p>This will be triggered when the status of the reader changes</p>","parent_name":"CSLBleInterfaceDelegate"},"Protocols/CSLBleInterfaceDelegate.html":{"name":"CSLBleInterfaceDelegate","abstract":"<p>Delegate of the Bluetooth LE interface events</p>"},"Protocols/CSLBleReaderDelegate.html":{"name":"CSLBleReaderDelegate","abstract":"<p>Delegate of the reader events</p>"},"Protocols/MQTTCFSocketDecoderDelegate.html":{"name":"MQTTCFSocketDecoderDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MQTTCFSocketEncoderDelegate.html":{"name":"MQTTCFSocketEncoderDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MQTTDecoderDelegate.html":{"name":"MQTTDecoderDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MQTTFlow.html":{"name":"MQTTFlow","abstract":"<p>MQTTFlow is an abstraction of the entity to be stored for persistence</p>"},"Protocols/MQTTPersistence.html":{"name":"MQTTPersistence","abstract":"<p>The MQTTPersistence protocol is an abstraction of persistence classes for MQTTSession</p>"},"Protocols/MQTTSessionDelegate.html":{"name":"MQTTSessionDelegate","abstract":"<p>Session delegate gives your application control over the MQTTSession</p>"},"Protocols/MQTTSessionManagerDelegate.html":{"name":"MQTTSessionManagerDelegate","abstract":"<p>delegate gives your application access to received messages</p>"},"Protocols/MQTTTransport.html":{"name":"MQTTTransport","abstract":"<p>MQTTTransport is a protocol abstracting the underlying transport level for MQTTClient"},"Protocols/MQTTTransportDelegate.html":{"name":"MQTTTransportDelegate","abstract":"<p>MQTTTransportDelegate protocol</p>"},"Enums/MQTTTransportState.html#/c:@E@MQTTTransportState@MQTTTransportCreated":{"name":"MQTTTransportCreated","abstract":"<p>MQTTTransportCreated indicates an initialized transport</p>","parent_name":"MQTTTransportState"},"Enums/MQTTTransportState.html#/c:@E@MQTTTransportState@MQTTTransportOpening":{"name":"MQTTTransportOpening","abstract":"<p>MQTTTransportOpening indicates a transport in the process of opening a connection</p>","parent_name":"MQTTTransportState"},"Enums/MQTTTransportState.html#/c:@E@MQTTTransportState@MQTTTransportOpen":{"name":"MQTTTransportOpen","abstract":"<p>MQTTTransportCreated indicates a transport opened ready for communication</p>","parent_name":"MQTTTransportState"},"Enums/MQTTTransportState.html#/c:@E@MQTTTransportState@MQTTTransportClosing":{"name":"MQTTTransportClosing","abstract":"<p>MQTTTransportCreated indicates a transport in the process of closing</p>","parent_name":"MQTTTransportState"},"Enums/MQTTTransportState.html#/c:@E@MQTTTransportState@MQTTTransportClosed":{"name":"MQTTTransportClosed","abstract":"<p>MQTTTransportCreated indicates a closed transport</p>","parent_name":"MQTTTransportState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateStarting":{"name":"MQTTSessionManagerStateStarting","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateConnecting":{"name":"MQTTSessionManagerStateConnecting","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateError":{"name":"MQTTSessionManagerStateError","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateConnected":{"name":"MQTTSessionManagerStateConnected","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateClosing":{"name":"MQTTSessionManagerStateClosing","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionManagerState.html#/c:@E@MQTTSessionManagerState@MQTTSessionManagerStateClosed":{"name":"MQTTSessionManagerStateClosed","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionManagerState"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnectionRefused":{"name":"MQTTSessionErrorConnectionRefused","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorIllegalMessageReceived":{"name":"MQTTSessionErrorIllegalMessageReceived","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorDroppingOutgoingMessage":{"name":"MQTTSessionErrorDroppingOutgoingMessage","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorNoResponse":{"name":"MQTTSessionErrorNoResponse","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorEncoderNotReady":{"name":"MQTTSessionErrorEncoderNotReady","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorInvalidConnackReceived":{"name":"MQTTSessionErrorInvalidConnackReceived","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorNoConnackReceived":{"name":"MQTTSessionErrorNoConnackReceived","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackUnacceptableProtocolVersion":{"name":"MQTTSessionErrorConnackUnacceptableProtocolVersion","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackIdentifierRejected":{"name":"MQTTSessionErrorConnackIdentifierRejected","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackServeUnavailable":{"name":"MQTTSessionErrorConnackServeUnavailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackBadUsernameOrPassword":{"name":"MQTTSessionErrorConnackBadUsernameOrPassword","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackNotAuthorized":{"name":"MQTTSessionErrorConnackNotAuthorized","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionError.html#/c:@E@MQTTSessionError@MQTTSessionErrorConnackReserved":{"name":"MQTTSessionErrorConnackReserved","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionError"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventConnected":{"name":"MQTTSessionEventConnected","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventConnectionRefused":{"name":"MQTTSessionEventConnectionRefused","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventConnectionClosed":{"name":"MQTTSessionEventConnectionClosed","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventConnectionError":{"name":"MQTTSessionEventConnectionError","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventProtocolError":{"name":"MQTTSessionEventProtocolError","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionEvent.html#/c:@E@MQTTSessionEvent@MQTTSessionEventConnectionClosedByBroker":{"name":"MQTTSessionEventConnectionClosedByBroker","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionEvent"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusCreated":{"name":"MQTTSessionStatusCreated","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusConnecting":{"name":"MQTTSessionStatusConnecting","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusConnected":{"name":"MQTTSessionStatusConnected","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusDisconnecting":{"name":"MQTTSessionStatusDisconnecting","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusClosed":{"name":"MQTTSessionStatusClosed","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSessionStatus.html#/c:@E@MQTTSessionStatus@MQTTSessionStatusError":{"name":"MQTTSessionStatusError","abstract":"<p>Undocumented</p>","parent_name":"MQTTSessionStatus"},"Enums/MQTTSSLPinningMode.html#/c:@E@MQTTSSLPinningMode@MQTTSSLPinningModeNone":{"name":"MQTTSSLPinningModeNone","abstract":"<p>Undocumented</p>","parent_name":"MQTTSSLPinningMode"},"Enums/MQTTSSLPinningMode.html#/c:@E@MQTTSSLPinningMode@MQTTSSLPinningModePublicKey":{"name":"MQTTSSLPinningModePublicKey","abstract":"<p>Undocumented</p>","parent_name":"MQTTSSLPinningMode"},"Enums/MQTTSSLPinningMode.html#/c:@E@MQTTSSLPinningMode@MQTTSSLPinningModeCertificate":{"name":"MQTTSSLPinningModeCertificate","abstract":"<p>Undocumented</p>","parent_name":"MQTTSSLPinningMode"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTPayloadFormatIndicator":{"name":"MQTTPayloadFormatIndicator","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTPublicationExpiryInterval":{"name":"MQTTPublicationExpiryInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTContentType":{"name":"MQTTContentType","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTResponseTopic":{"name":"MQTTResponseTopic","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTCorrelationData":{"name":"MQTTCorrelationData","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTSubscriptionIdentifier":{"name":"MQTTSubscriptionIdentifier","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTSessionExpiryInterval":{"name":"MQTTSessionExpiryInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTAssignedClientIdentifier":{"name":"MQTTAssignedClientIdentifier","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTServerKeepAlive":{"name":"MQTTServerKeepAlive","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTAuthMethod":{"name":"MQTTAuthMethod","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTAuthData":{"name":"MQTTAuthData","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTRequestProblemInformation":{"name":"MQTTRequestProblemInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTWillDelayInterval":{"name":"MQTTWillDelayInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTRequestResponseInformation":{"name":"MQTTRequestResponseInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTResponseInformation":{"name":"MQTTResponseInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTServerReference":{"name":"MQTTServerReference","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTReasonString":{"name":"MQTTReasonString","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTReceiveMaximum":{"name":"MQTTReceiveMaximum","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTTopicAliasMaximum":{"name":"MQTTTopicAliasMaximum","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTTopicAlias":{"name":"MQTTTopicAlias","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTMaximumQoS":{"name":"MQTTMaximumQoS","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTRetainAvailable":{"name":"MQTTRetainAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTUserProperty":{"name":"MQTTUserProperty","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTMaximumPacketSize":{"name":"MQTTMaximumPacketSize","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTWildcardSubscriptionAvailable":{"name":"MQTTWildcardSubscriptionAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTSubscriptionIdentifiersAvailable":{"name":"MQTTSubscriptionIdentifiersAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTPropertyIdentifier.html#/c:@E@MQTTPropertyIdentifier@MQTTSharedSubscriptionAvailable":{"name":"MQTTSharedSubscriptionAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTPropertyIdentifier"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTAccepted":{"name":"MQTTAccepted","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRefusedUnacceptableProtocolVersion":{"name":"MQTTRefusedUnacceptableProtocolVersion","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRefusedIdentiferRejected":{"name":"MQTTRefusedIdentiferRejected","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRefusedServerUnavailable":{"name":"MQTTRefusedServerUnavailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRefusedBadUserNameOrPassword":{"name":"MQTTRefusedBadUserNameOrPassword","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRefusedNotAuthorized":{"name":"MQTTRefusedNotAuthorized","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTSuccess":{"name":"MQTTSuccess","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTDisconnectWithWillMessage":{"name":"MQTTDisconnectWithWillMessage","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTNoSubscriptionExisted":{"name":"MQTTNoSubscriptionExisted","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTContinueAuthentication":{"name":"MQTTContinueAuthentication","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTReAuthenticate":{"name":"MQTTReAuthenticate","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTUnspecifiedError":{"name":"MQTTUnspecifiedError","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTMalformedPacket":{"name":"MQTTMalformedPacket","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTProtocolError":{"name":"MQTTProtocolError","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTImplementationSpecificError":{"name":"MQTTImplementationSpecificError","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTUnsupportedProtocolVersion":{"name":"MQTTUnsupportedProtocolVersion","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTClientIdentifierNotValid":{"name":"MQTTClientIdentifierNotValid","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTBadUserNameOrPassword":{"name":"MQTTBadUserNameOrPassword","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTNotAuthorized":{"name":"MQTTNotAuthorized","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTServerUnavailable":{"name":"MQTTServerUnavailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTServerBusy":{"name":"MQTTServerBusy","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTBanned":{"name":"MQTTBanned","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTServerShuttingDown":{"name":"MQTTServerShuttingDown","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTBadAuthenticationMethod":{"name":"MQTTBadAuthenticationMethod","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTKeepAliveTimeout":{"name":"MQTTKeepAliveTimeout","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTSessionTakenOver":{"name":"MQTTSessionTakenOver","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTTopicFilterInvalid":{"name":"MQTTTopicFilterInvalid","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTTopicNameInvalid":{"name":"MQTTTopicNameInvalid","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTPacketIdentifierInUse":{"name":"MQTTPacketIdentifierInUse","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTPacketIdentifierNotFound":{"name":"MQTTPacketIdentifierNotFound","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTReceiveMaximumExceeded":{"name":"MQTTReceiveMaximumExceeded","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTPacketTooLarge":{"name":"MQTTPacketTooLarge","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTMessageRateTooHigh":{"name":"MQTTMessageRateTooHigh","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTQuotaExceeded":{"name":"MQTTQuotaExceeded","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTAdministrativeAction":{"name":"MQTTAdministrativeAction","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTPayloadFormatInvalid":{"name":"MQTTPayloadFormatInvalid","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTRetainNotSupported":{"name":"MQTTRetainNotSupported","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTQoSNotSupported":{"name":"MQTTQoSNotSupported","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTUseAnotherServer":{"name":"MQTTUseAnotherServer","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTServerMoved":{"name":"MQTTServerMoved","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTSharedSubscriptionNotSupported":{"name":"MQTTSharedSubscriptionNotSupported","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTConnectionRateExceeded":{"name":"MQTTConnectionRateExceeded","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTSubscriptionIdentifiersNotSupported":{"name":"MQTTSubscriptionIdentifiersNotSupported","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTReturnCode.html#/c:@E@MQTTReturnCode@MQTTWildcardSubscriptionNotSupported":{"name":"MQTTWildcardSubscriptionNotSupported","abstract":"<p>Undocumented</p>","parent_name":"MQTTReturnCode"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTT_None":{"name":"MQTT_None","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTConnect":{"name":"MQTTConnect","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTConnack":{"name":"MQTTConnack","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPublish":{"name":"MQTTPublish","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPuback":{"name":"MQTTPuback","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPubrec":{"name":"MQTTPubrec","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPubrel":{"name":"MQTTPubrel","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPubcomp":{"name":"MQTTPubcomp","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTSubscribe":{"name":"MQTTSubscribe","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTSuback":{"name":"MQTTSuback","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTUnsubscribe":{"name":"MQTTUnsubscribe","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTUnsuback":{"name":"MQTTUnsuback","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPingreq":{"name":"MQTTPingreq","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTPingresp":{"name":"MQTTPingresp","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTDisconnect":{"name":"MQTTDisconnect","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTCommandType.html#/c:@E@MQTTCommandType@MQTTAuth":{"name":"MQTTAuth","abstract":"<p>Undocumented</p>","parent_name":"MQTTCommandType"},"Enums/MQTTProtocolVersion.html#/c:@E@MQTTProtocolVersion@MQTTProtocolVersion0":{"name":"MQTTProtocolVersion0","abstract":"<p>Undocumented</p>","parent_name":"MQTTProtocolVersion"},"Enums/MQTTProtocolVersion.html#/c:@E@MQTTProtocolVersion@MQTTProtocolVersion31":{"name":"MQTTProtocolVersion31","abstract":"<p>Undocumented</p>","parent_name":"MQTTProtocolVersion"},"Enums/MQTTProtocolVersion.html#/c:@E@MQTTProtocolVersion@MQTTProtocolVersion311":{"name":"MQTTProtocolVersion311","abstract":"<p>Undocumented</p>","parent_name":"MQTTProtocolVersion"},"Enums/MQTTProtocolVersion.html#/c:@E@MQTTProtocolVersion@MQTTProtocolVersion50":{"name":"MQTTProtocolVersion50","abstract":"<p>Undocumented</p>","parent_name":"MQTTProtocolVersion"},"Enums/MQTTQosLevel.html#/c:@E@MQTTQosLevel@MQTTQosLevelAtMostOnce":{"name":"MQTTQosLevelAtMostOnce","abstract":"<p>Undocumented</p>","parent_name":"MQTTQosLevel"},"Enums/MQTTQosLevel.html#/c:@E@MQTTQosLevel@MQTTQosLevelAtLeastOnce":{"name":"MQTTQosLevelAtLeastOnce","abstract":"<p>Undocumented</p>","parent_name":"MQTTQosLevel"},"Enums/MQTTQosLevel.html#/c:@E@MQTTQosLevel@MQTTQosLevelExactlyOnce":{"name":"MQTTQosLevelExactlyOnce","abstract":"<p>Undocumented</p>","parent_name":"MQTTQosLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelOff":{"name":"DDLogLevelOff","abstract":"<p>Undocumented</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelError":{"name":"DDLogLevelError","abstract":"<p>Error logs only</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelWarning":{"name":"DDLogLevelWarning","abstract":"<p>Error and warning logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelInfo":{"name":"DDLogLevelInfo","abstract":"<p>Error, warning and info logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelDebug":{"name":"DDLogLevelDebug","abstract":"<p>Error, warning, info and debug logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelVerbose":{"name":"DDLogLevelVerbose","abstract":"<p>Error, warning, info, debug and verbose logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelAll":{"name":"DDLogLevelAll","abstract":"<p>All logs (1&hellip;11111)</p>","parent_name":"DDLogLevel"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagError":{"name":"DDLogFlagError","abstract":"<p>0&hellip;00001 DDLogFlagError</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagWarning":{"name":"DDLogFlagWarning","abstract":"<p>0&hellip;00010 DDLogFlagWarning</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagInfo":{"name":"DDLogFlagInfo","abstract":"<p>0&hellip;00100 DDLogFlagInfo</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagDebug":{"name":"DDLogFlagDebug","abstract":"<p>0&hellip;01000 DDLogFlagDebug</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagVerbose":{"name":"DDLogFlagVerbose","abstract":"<p>0&hellip;10000 DDLogFlagVerbose</p>","parent_name":"DDLogFlag"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateInitializing":{"name":"MQTTDecoderStateInitializing","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateDecodingHeader":{"name":"MQTTDecoderStateDecodingHeader","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateDecodingLength":{"name":"MQTTDecoderStateDecodingLength","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateDecodingData":{"name":"MQTTDecoderStateDecodingData","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateConnectionClosed":{"name":"MQTTDecoderStateConnectionClosed","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateConnectionError":{"name":"MQTTDecoderStateConnectionError","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderState.html#/c:@E@MQTTDecoderState@MQTTDecoderStateProtocolError":{"name":"MQTTDecoderStateProtocolError","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderState"},"Enums/MQTTDecoderEvent.html#/c:@E@MQTTDecoderEvent@MQTTDecoderEventProtocolError":{"name":"MQTTDecoderEventProtocolError","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderEvent"},"Enums/MQTTDecoderEvent.html#/c:@E@MQTTDecoderEvent@MQTTDecoderEventConnectionClosed":{"name":"MQTTDecoderEventConnectionClosed","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderEvent"},"Enums/MQTTDecoderEvent.html#/c:@E@MQTTDecoderEvent@MQTTDecoderEventConnectionError":{"name":"MQTTDecoderEventConnectionError","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoderEvent"},"Enums/MQTTCFSocketEncoderState.html#/c:@E@MQTTCFSocketEncoderState@MQTTCFSocketEncoderStateInitializing":{"name":"MQTTCFSocketEncoderStateInitializing","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderState"},"Enums/MQTTCFSocketEncoderState.html#/c:@E@MQTTCFSocketEncoderState@MQTTCFSocketEncoderStateReady":{"name":"MQTTCFSocketEncoderStateReady","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderState"},"Enums/MQTTCFSocketEncoderState.html#/c:@E@MQTTCFSocketEncoderState@MQTTCFSocketEncoderStateError":{"name":"MQTTCFSocketEncoderStateError","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoderState"},"Enums/MQTTCFSocketDecoderState.html#/c:@E@MQTTCFSocketDecoderState@MQTTCFSocketDecoderStateInitializing":{"name":"MQTTCFSocketDecoderStateInitializing","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderState"},"Enums/MQTTCFSocketDecoderState.html#/c:@E@MQTTCFSocketDecoderState@MQTTCFSocketDecoderStateReady":{"name":"MQTTCFSocketDecoderStateReady","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderState"},"Enums/MQTTCFSocketDecoderState.html#/c:@E@MQTTCFSocketDecoderState@MQTTCFSocketDecoderStateError":{"name":"MQTTCFSocketDecoderStateError","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoderState"},"Enums/TEMPERATUREUNIT.html#/c:@E@TEMPERATUREUNIT@CELCIUS":{"name":"CELCIUS","abstract":"<p>Undocumented</p>","parent_name":"TEMPERATUREUNIT"},"Enums/TEMPERATUREUNIT.html#/c:@E@TEMPERATUREUNIT@FAHRENHEIT":{"name":"FAHRENHEIT","abstract":"<p>Undocumented</p>","parent_name":"TEMPERATUREUNIT"},"Enums/SENSORTYPE.html#/c:@E@SENSORTYPE@MAGNUSS3":{"name":"MAGNUSS3","abstract":"<p>Undocumented</p>","parent_name":"SENSORTYPE"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@NORMAL":{"name":"NORMAL","abstract":"<p>Battery level in good health</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@LOW":{"name":"LOW","abstract":"<p>Battery low indicator</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@LOW_17":{"name":"LOW_17","abstract":"<p>Battery level below 17%</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYMODE.html#/c:@E@BATTERYMODE@INVENTORY":{"name":"INVENTORY","abstract":"<p>Select battery level curve for inventory mode</p>","parent_name":"BATTERYMODE"},"Enums/BATTERYMODE.html#/c:@E@BATTERYMODE@IDLE":{"name":"IDLE","abstract":"<p>Select battery level curve for idle mode</p>","parent_name":"BATTERYMODE"},"Enums/MQTTStatus.html#/c:@E@MQTTStatus@MQTTStatusConnected":{"name":"MQTTStatusConnected","abstract":"<p>Undocumented</p>","parent_name":"MQTTStatus"},"Enums/MQTTStatus.html#/c:@E@MQTTStatus@MQTTStatusNotConnected":{"name":"MQTTStatusNotConnected","abstract":"<p>Undocumented</p>","parent_name":"MQTTStatus"},"Enums/MQTTStatus.html#/c:@E@MQTTStatus@MQTTStatusError":{"name":"MQTTStatusError","abstract":"<p>Undocumented</p>","parent_name":"MQTTStatus"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@READ":{"name":"READ","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@WRITE":{"name":"WRITE","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@KILL":{"name":"KILL","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@LOCK":{"name":"LOCK","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@EAS":{"name":"EAS","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/QUERYSELECT.html#/c:@E@QUERYSELECT@ALL":{"name":"ALL","abstract":"<p>Undocumented</p>","parent_name":"QUERYSELECT"},"Enums/QUERYSELECT.html#/c:@E@QUERYSELECT@SL":{"name":"SL","abstract":"<p>Undocumented</p>","parent_name":"QUERYSELECT"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@MULTIPATH_INTERFERENCE_RESISTANCE":{"name":"MULTIPATH_INTERFERENCE_RESISTANCE","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@RANGE_DRM":{"name":"RANGE_DRM","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@RANGE_THROUGHPUT_DRM":{"name":"RANGE_THROUGHPUT_DRM","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@MAX_THROUGHPUT":{"name":"MAX_THROUGHPUT","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/QUERYALGORITHM.html#/c:@E@QUERYALGORITHM@FIXEDQ":{"name":"FIXEDQ","abstract":"<p>Undocumented</p>","parent_name":"QUERYALGORITHM"},"Enums/QUERYALGORITHM.html#/c:@E@QUERYALGORITHM@DYNAMICQ":{"name":"DYNAMICQ","abstract":"<p>Undocumented</p>","parent_name":"QUERYALGORITHM"},"Enums/TARGET.html#/c:@E@TARGET@A":{"name":"A","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/TARGET.html#/c:@E@TARGET@B":{"name":"B","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/TARGET.html#/c:@E@TARGET@ToggleAB":{"name":"ToggleAB","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/SESSION.html#/c:@E@SESSION@S0":{"name":"S0","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S1":{"name":"S1","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S2":{"name":"S2","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S3":{"name":"S3","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@RESERVED":{"name":"RESERVED","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@EPC":{"name":"EPC","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@TID":{"name":"TID","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@USER":{"name":"USER","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/DIRECTION.html#/c:@E@DIRECTION@Downlink":{"name":"Downlink","abstract":"<p>Undocumented</p>","parent_name":"DIRECTION"},"Enums/DIRECTION.html#/c:@E@DIRECTION@Uplink":{"name":"Uplink","abstract":"<p>Undocumented</p>","parent_name":"DIRECTION"},"Enums/CONNECTION.html#/c:@E@CONNECTION@USB":{"name":"USB","abstract":"<p>Undocumented</p>","parent_name":"CONNECTION"},"Enums/CONNECTION.html#/c:@E@CONNECTION@Bluetooth":{"name":"Bluetooth","abstract":"<p>Undocumented</p>","parent_name":"CONNECTION"},"Enums/DEVICEID.html#/c:@E@DEVICEID@RFID":{"name":"RFID","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@Barcode":{"name":"Barcode","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@Notification":{"name":"Notification","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@SiliconLabIC":{"name":"SiliconLabIC","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@BluetoothIC":{"name":"BluetoothIC","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/STATUS.html#/c:@E@STATUS@CONNECTED":{"name":"CONNECTED","abstract":"<p>When reader is connected but in idle mode</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@NOT_CONNECTED":{"name":"NOT_CONNECTED","abstract":"<p>When reader is not connected</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@SCANNING":{"name":"SCANNING","abstract":"<p>Application is under device search mode</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@BUSY":{"name":"BUSY","abstract":"<p>Reader is busy and not able to receive any downlink command</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@TAG_OPERATIONS":{"name":"TAG_OPERATIONS","abstract":"<p>Reader is performing actions on the tags (inventory/read/write/etc) in the background but still able to receive specific downlink commands</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@ERROR":{"name":"ERROR","abstract":"<p>Indicates an internal error</p>","parent_name":"STATUS"},"Enums/STATUS.html":{"name":"STATUS","abstract":"<p>Reader status representations</p>"},"Enums/DEVICEID.html":{"name":"DEVICEID","abstract":"<p>Device ID</p>"},"Enums/CONNECTION.html":{"name":"CONNECTION","abstract":"<p>Connection type (USB/Bluetooth)</p>"},"Enums/DIRECTION.html":{"name":"DIRECTION","abstract":"<p>Direction of data transfer</p>"},"Enums/MEMORYBANK.html":{"name":"MEMORYBANK","abstract":"<p>Query sessions</p>"},"Enums/SESSION.html":{"name":"SESSION","abstract":"<p>Query sessions</p>"},"Enums/TARGET.html":{"name":"TARGET","abstract":"<p>Query target</p>"},"Enums/QUERYALGORITHM.html":{"name":"QUERYALGORITHM","abstract":"<p>Query algorithm</p>"},"Enums/LINKPROFILE.html":{"name":"LINKPROFILE","abstract":"<p>Link profile</p>"},"Enums/QUERYSELECT.html":{"name":"QUERYSELECT","abstract":"<p>Undocumented</p>"},"Enums/ACCESSCMD.html":{"name":"ACCESSCMD","abstract":"<p>Tag Access Command</p>"},"Enums/MQTTStatus.html":{"name":"MQTTStatus","abstract":"<p>Enumeration of MQTT status</p>"},"Enums/BATTERYMODE.html":{"name":"BATTERYMODE","abstract":"<p>Select the battery level curve based on the reader status</p>"},"Enums/BATTERYLEVELSTATUS.html":{"name":"BATTERYLEVELSTATUS","abstract":"<p>Define the battery level status</p>"},"Enums/SENSORTYPE.html":{"name":"SENSORTYPE","abstract":"<p>Temperature Sensor Type (TID)</p>"},"Enums/TEMPERATUREUNIT.html":{"name":"TEMPERATUREUNIT","abstract":"<p>Temperature Unit</p>"},"Enums/MQTTCFSocketDecoderState.html":{"name":"MQTTCFSocketDecoderState","abstract":"<p>Undocumented</p>"},"Enums/MQTTCFSocketEncoderState.html":{"name":"MQTTCFSocketEncoderState","abstract":"<p>Undocumented</p>"},"Enums/MQTTDecoderEvent.html":{"name":"MQTTDecoderEvent","abstract":"<p>Undocumented</p>"},"Enums/MQTTDecoderState.html":{"name":"MQTTDecoderState","abstract":"<p>Undocumented</p>"},"Enums/DDLogFlag.html":{"name":"DDLogFlag","abstract":"<p>Undocumented</p>"},"Enums/DDLogLevel.html":{"name":"DDLogLevel","abstract":"<p>Undocumented</p>"},"Enums/MQTTQosLevel.html":{"name":"MQTTQosLevel","abstract":"<p>Enumeration of MQTT Quality of Service levels</p>"},"Enums/MQTTProtocolVersion.html":{"name":"MQTTProtocolVersion","abstract":"<p>Enumeration of MQTT protocol version</p>"},"Enums/MQTTCommandType.html":{"name":"MQTTCommandType","abstract":"<p>Undocumented</p>"},"Enums/MQTTReturnCode.html":{"name":"MQTTReturnCode","abstract":"<p>Enumeration of MQTT return codes</p>"},"Enums/MQTTPropertyIdentifier.html":{"name":"MQTTPropertyIdentifier","abstract":"<p>Undocumented</p>"},"Enums/MQTTSSLPinningMode.html":{"name":"MQTTSSLPinningMode","abstract":"<h2 id='ssl-pinning-modes' class='heading'>SSL Pinning Modes</h2>"},"Enums/MQTTSessionStatus.html":{"name":"MQTTSessionStatus","abstract":"<p>Enumeration of MQTTSession states</p>"},"Enums/MQTTSessionEvent.html":{"name":"MQTTSessionEvent","abstract":"<p>Enumeration of MQTTSession events</p>"},"Enums/MQTTSessionError.html":{"name":"MQTTSessionError","abstract":"<p>The error codes used for all errors created by MQTTSession</p>"},"Enums/MQTTSessionManagerState.html":{"name":"MQTTSessionManagerState","abstract":"<p>Enumeration of MQTTSessionManagerState values</p>"},"Enums/MQTTTransportState.html":{"name":"MQTTTransportState","abstract":"<p>MQTTTransport state defines the possible state of an abstract transport"},"Constants.html#/c:@MQTTClientVersionNumber":{"name":"MQTTClientVersionNumber","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MQTTClientVersionString":{"name":"MQTTClientVersionString","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@ddLogLevel":{"name":"ddLogLevel","abstract":"<p>Undocumented</p>"},"Constants.html#/c:MQTTPersistence.h@MQTT_PERSISTENT":{"name":"MQTT_PERSISTENT","abstract":"<p>Undocumented</p>"},"Constants.html#/c:MQTTPersistence.h@MQTT_MAX_SIZE":{"name":"MQTT_MAX_SIZE","abstract":"<p>Undocumented</p>"},"Constants.html#/c:MQTTPersistence.h@MQTT_MAX_WINDOW_SIZE":{"name":"MQTT_MAX_WINDOW_SIZE","abstract":"<p>Undocumented</p>"},"Constants.html#/c:MQTTPersistence.h@MQTT_MAX_MESSAGES":{"name":"MQTT_MAX_MESSAGES","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MQTTSessionErrorDomain":{"name":"MQTTSessionErrorDomain","abstract":"<p>The error domain used for all errors created by MQTTSession</p>"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)session":{"name":"session","abstract":"<p>Underlying MQTTSession currently in use.</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)host":{"name":"host","abstract":"<p>host an NSString containing the hostName or IP address of the Server</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)port":{"name":"port","abstract":"<p>port an unsigned 32 bit integer containing the IP port number of the Server</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)delegate":{"name":"delegate","abstract":"<p>the delegate receiving incoming messages</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)requiresTearDown":{"name":"requiresTearDown","abstract":"<p>indicates if manager requires tear down</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)subscriptions":{"name":"subscriptions","abstract":"<p>subscriptions is a dictionary of NSNumber instances indicating the MQTTQoSLevel.</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)effectiveSubscriptions":{"name":"effectiveSubscriptions","abstract":"<p>effectiveSubscriptions s a dictionary of NSNumber instances indicating the granted MQTTQoSLevel, or 0x80 for subscription failure.</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)state":{"name":"state","abstract":"<p>SessionManager status</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(py)lastErrorCode":{"name":"lastErrorCode","abstract":"<p>SessionManager last error code when state equals MQTTSessionManagerStateError</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(im)initWithPersistence:maxWindowSize:maxMessages:maxSize:maxConnectionRetryInterval:connectInForeground:streamSSLLevel:queue:":{"name":"-initWithPersistence:maxWindowSize:maxMessages:maxSize:maxConnectionRetryInterval:connectInForeground:streamSSLLevel:queue:","abstract":"<p>initWithPersistence sets the MQTTPersistence properties other than default</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(im)connectTo:port:tls:keepalive:clean:auth:user:pass:will:willTopic:willMsg:willQos:willRetainFlag:withClientId:securityPolicy:certificates:protocolLevel:connectHandler:":{"name":"-connectTo:port:tls:keepalive:clean:auth:user:pass:will:willTopic:willMsg:willQos:willRetainFlag:withClientId:securityPolicy:certificates:protocolLevel:connectHandler:","abstract":"<p>Connects to the MQTT broker and stores the parameters for subsequent reconnects</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(im)connectToLast:":{"name":"-connectToLast:","abstract":"<p>Re-Connects to the MQTT broker using the parameters for given in the connectTo method</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(im)sendData:topic:qos:retain:":{"name":"-sendData:topic:qos:retain:","abstract":"<p>publishes data on a given topic at a specified QoS level and retain flag</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSessionManager.html#/c:objc(cs)MQTTSessionManager(im)disconnectWithDisconnectHandler:":{"name":"-disconnectWithDisconnectHandler:","abstract":"<p>Disconnects gracefully from the MQTT broker</p>","parent_name":"MQTTSessionManager"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)delegate":{"name":"delegate","abstract":"<p>set this member variable to receive delegate messages","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)persistence":{"name":"persistence","abstract":"<p>Control MQTT persistence by setting the properties of persistence before connecting to an MQTT broker.","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)connectHandler":{"name":"connectHandler","abstract":"<p>block called once when connection is established</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)connectionHandler":{"name":"connectionHandler","abstract":"<p>block called when connection is established</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)messageHandler":{"name":"messageHandler","abstract":"<p>block called when message is received</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)status":{"name":"status","abstract":"<p>Session status</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)sessionPresent":{"name":"sessionPresent","abstract":"<p>Indicates if the broker found a persistent session when connecting with cleanSession:FALSE</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)streamSSLLevel":{"name":"streamSSLLevel","abstract":"<p>streamSSLLevel an NSString containing the security level for read and write streams</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)host":{"name":"host","abstract":"<p>host an NSString containing the hostName or IP address of the Server</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)port":{"name":"port","abstract":"<p>port an unsigned 32 bit integer containing the IP port number of the Server</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)clientId":{"name":"clientId","abstract":"<p>The Client Identifier identifies the Client to the Server. If nil, a random clientId is generated.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)userName":{"name":"userName","abstract":"<p>see userName an NSString object containing the user&rsquo;s name (or ID) for authentication. May be nil.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)password":{"name":"password","abstract":"<p>see password an NSString object containing the user&rsquo;s password. If userName is nil, password must be nil as well.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)keepAliveInterval":{"name":"keepAliveInterval","abstract":"<p>see keepAliveInterval The Keep Alive is a time interval measured in seconds.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)serverKeepAlive":{"name":"serverKeepAlive","abstract":"<p>The serverKeepAlive is a time interval measured in seconds.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)effectiveKeepAlive":{"name":"effectiveKeepAlive","abstract":"<p>effectiveKeepAlive is a time interval measured in seconds</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)dupTimeout":{"name":"dupTimeout","abstract":"<p>dupTimeout If PUBACK or PUBREC not received, message will be resent after this interval</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)cleanSessionFlag":{"name":"cleanSessionFlag","abstract":"<p>leanSessionFlag specifies if the server should discard previous session information.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willFlag":{"name":"willFlag","abstract":"<p>willFlag If the Will Flag is set to YES this indicates that</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willTopic":{"name":"willTopic","abstract":"<p>willTopic If the Will Flag is set to YES, the Will Topic is a string, nil otherwise.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willMsg":{"name":"willMsg","abstract":"<p>willMsg If the Will Flag is set to YES the Will Message must be specified, nil otherwise.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willQoS":{"name":"willQoS","abstract":"<p>willQoS specifies the QoS level to be used when publishing the Will Message.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willRetainFlag":{"name":"willRetainFlag","abstract":"<p>willRetainFlag indicates if the server should publish the Will Messages with retainFlag.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)protocolLevel":{"name":"protocolLevel","abstract":"<p>protocolLevel specifies the protocol to be used</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)sessionExpiryInterval":{"name":"sessionExpiryInterval","abstract":"<p>sessionExpiryInterval specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)authMethod":{"name":"authMethod","abstract":"<p>authMethod specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)authData":{"name":"authData","abstract":"<p>authData specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)requestProblemInformation":{"name":"requestProblemInformation","abstract":"<p>requestProblemInformation specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)willDelayInterval":{"name":"willDelayInterval","abstract":"<p>willDelayInterval specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)requestResponseInformation":{"name":"requestResponseInformation","abstract":"<p>requestResponseInformation specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)receiveMaximum":{"name":"receiveMaximum","abstract":"<p>receiveMaximum specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)topicAliasMaximum":{"name":"topicAliasMaximum","abstract":"<p>topicAliasMaximum specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)userProperty":{"name":"userProperty","abstract":"<p>topicAliasMaximum specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)maximumPacketSize":{"name":"maximumPacketSize","abstract":"<p>maximumPacketSize specifies the number of seconds after which a session should expire MQTT v5.0</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)queue":{"name":"queue","abstract":"<p>queue The queue where the streams are scheduled.</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)connectMessage":{"name":"connectMessage","abstract":"<p>for mqttio-OBJC backward compatibility","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)transport":{"name":"transport","abstract":"<p>the transport provider for MQTTClient","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)certificates":{"name":"certificates","abstract":"<p>certificates an NSArray holding client certificates or nil</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(py)voip":{"name":"voip","abstract":"<p>Require for VoIP background service</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)connect":{"name":"-connect","abstract":"<p>connect to the given host through the given transport with the given</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)connectWithConnectHandler:":{"name":"-connectWithConnectHandler:","abstract":"<p>connects to the specified MQTT server</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)disconnect":{"name":"-disconnect","abstract":"<p>disconnect gracefully","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)disconnectWithReturnCode:sessionExpiryInterval:reasonString:userProperty:":{"name":"-disconnectWithReturnCode:sessionExpiryInterval:reasonString:userProperty:","abstract":"<p>disconnect V5</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)init":{"name":"-init","abstract":"<p>initialises the MQTT session with default values</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeToTopic:atLevel:":{"name":"-subscribeToTopic:atLevel:","abstract":"<p>subscribes to a topic at a specific QoS level</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeToTopic:atLevel:subscribeHandler:":{"name":"-subscribeToTopic:atLevel:subscribeHandler:","abstract":"<p>subscribes to a topic at a specific QoS level</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeToTopics:":{"name":"-subscribeToTopics:","abstract":"<p>subscribes a number of topics</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeToTopics:subscribeHandler:":{"name":"-subscribeToTopics:subscribeHandler:","abstract":"<p>subscribes a number of topics</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeTopic:":{"name":"-unsubscribeTopic:","abstract":"<p>unsubscribes from a topic</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeTopic:unsubscribeHandler:":{"name":"-unsubscribeTopic:unsubscribeHandler:","abstract":"<p>unsubscribes from a topic</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeTopics:":{"name":"-unsubscribeTopics:","abstract":"<p>unsubscribes from a number of topics</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeTopics:unsubscribeHandler:":{"name":"-unsubscribeTopics:unsubscribeHandler:","abstract":"<p>unsubscribes from a number of topics</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)publishData:onTopic:retain:qos:":{"name":"-publishData:onTopic:retain:qos:","abstract":"<p>publishes data on a given topic at a specified QoS level and retain flag</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)publishData:onTopic:retain:qos:publishHandler:":{"name":"-publishData:onTopic:retain:qos:publishHandler:","abstract":"<p>publishes data on a given topic at a specified QoS level and retain flag</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)closeWithDisconnectHandler:":{"name":"-closeWithDisconnectHandler:","abstract":"<p>closes an MQTTSession gracefully</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)closeWithReturnCode:sessionExpiryInterval:reasonString:userProperty:disconnectHandler:":{"name":"-closeWithReturnCode:sessionExpiryInterval:reasonString:userProperty:disconnectHandler:","abstract":"<p>close V5</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)initWithClientId:userName:password:keepAlive:connectMessage:cleanSession:will:willTopic:willMsg:willQoS:willRetainFlag:protocolLevel:queue:securityPolicy:certificates:":{"name":"-initWithClientId:userName:password:keepAlive:connectMessage:cleanSession:will:willTopic:willMsg:willQoS:willRetainFlag:protocolLevel:queue:securityPolicy:certificates:","abstract":"<p>initialises the MQTT session","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)publishJson:onTopic:":{"name":"-publishJson:onTopic:","abstract":"<p>for mqttio-OBJC backward compatibility</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)connectAndWaitTimeout:":{"name":"-connectAndWaitTimeout:","abstract":"<p>connects to the specified MQTT server synchronously</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeAndWaitToTopic:atLevel:timeout:":{"name":"-subscribeAndWaitToTopic:atLevel:timeout:","abstract":"<p>subscribes to a topic at a specific QoS level synchronously</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)subscribeAndWaitToTopics:timeout:":{"name":"-subscribeAndWaitToTopics:timeout:","abstract":"<p>subscribes a number of topics</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeAndWaitTopic:timeout:":{"name":"-unsubscribeAndWaitTopic:timeout:","abstract":"<p>unsubscribes from a topic synchronously</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)unsubscribeAndWaitTopics:timeout:":{"name":"-unsubscribeAndWaitTopics:timeout:","abstract":"<p>unsubscribes from a number of topics synchronously</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)publishAndWaitData:onTopic:retain:qos:timeout:":{"name":"-publishAndWaitData:onTopic:retain:qos:timeout:","abstract":"<p>publishes synchronously data on a given topic at a specified QoS level and retain flag</p>","parent_name":"MQTTSession"},"Classes/MQTTSession.html#/c:objc(cs)MQTTSession(im)closeAndWait:":{"name":"-closeAndWait:","abstract":"<p>closes an MQTTSession gracefully synchronously</p>","parent_name":"MQTTSession"},"Classes/MQTTSSLSecurityPolicyTransport.html#/c:objc(cs)MQTTSSLSecurityPolicyTransport(py)securityPolicy":{"name":"securityPolicy","abstract":"<p>The security policy used to evaluate server trust for secure connections.</p>","parent_name":"MQTTSSLSecurityPolicyTransport"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(py)SSLPinningMode":{"name":"SSLPinningMode","abstract":"<p>The criteria by which server trust should be evaluated against the pinned SSL certificates. Defaults to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/MQTTSSLPinningMode.html\">MQTTSSLPinningMode</a></code>.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(py)validatesCertificateChain":{"name":"validatesCertificateChain","abstract":"<p>Whether to evaluate an entire SSL certificate chain, or just the leaf certificate. Defaults to <code>YES</code>.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(py)pinnedCertificates":{"name":"pinnedCertificates","abstract":"<p>The certificates used to evaluate server trust according to the SSL pinning mode. By default, this property is set to any (<code>.cer</code>) certificates included in the app bundle.","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(py)allowInvalidCertificates":{"name":"allowInvalidCertificates","abstract":"<p>Whether or not to trust servers with an invalid or expired SSL certificates. Defaults to <code>NO</code>.","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(py)validatesDomainName":{"name":"validatesDomainName","abstract":"<p>Whether or not to validate the domain name in the certificate&rsquo;s CN field. Defaults to <code>YES</code>.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(cm)defaultPolicy":{"name":"+defaultPolicy","abstract":"<p>Returns the shared default security policy, which does not allow invalid certificates, validates domain name, and does not validate against pinned certificates or public keys.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(cm)policyWithPinningMode:":{"name":"+policyWithPinningMode:","abstract":"<p>Creates and returns a security policy with the specified pinning mode.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTSSLSecurityPolicy.html#/c:objc(cs)MQTTSSLSecurityPolicy(im)evaluateServerTrust:forDomain:":{"name":"-evaluateServerTrust:forDomain:","abstract":"<p>Whether or not the specified server trust should be accepted, based on the security policy.</p>","parent_name":"MQTTSSLSecurityPolicy"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)payloadFormatIndicator":{"name":"payloadFormatIndicator","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)publicationExpiryInterval":{"name":"publicationExpiryInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)contentType":{"name":"contentType","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)responseTopic":{"name":"responseTopic","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)correlationData":{"name":"correlationData","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)subscriptionIdentifier":{"name":"subscriptionIdentifier","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)sessionExpiryInterval":{"name":"sessionExpiryInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)assignedClientIdentifier":{"name":"assignedClientIdentifier","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)serverKeepAlive":{"name":"serverKeepAlive","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)authMethod":{"name":"authMethod","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)authData":{"name":"authData","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)requestProblemInformation":{"name":"requestProblemInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)willDelayInterval":{"name":"willDelayInterval","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)requestResponseInformation":{"name":"requestResponseInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)responseInformation":{"name":"responseInformation","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)serverReference":{"name":"serverReference","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)reasonString":{"name":"reasonString","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)receiveMaximum":{"name":"receiveMaximum","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)topicAliasMaximum":{"name":"topicAliasMaximum","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)topicAlias":{"name":"topicAlias","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)maximumQoS":{"name":"maximumQoS","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)retainAvailable":{"name":"retainAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)userProperty":{"name":"userProperty","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)maximumPacketSize":{"name":"maximumPacketSize","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)wildcardSubscriptionAvailable":{"name":"wildcardSubscriptionAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)subscriptionIdentifiersAvailable":{"name":"subscriptionIdentifiersAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(py)sharedSubscriptionAvailable":{"name":"sharedSubscriptionAvailable","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(im)initFromData:":{"name":"-initFromData:","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(cm)getVariableLength:":{"name":"+getVariableLength:","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTProperties.html#/c:objc(cs)MQTTProperties(cm)variableIntLength:":{"name":"+variableIntLength:","abstract":"<p>Undocumented</p>","parent_name":"MQTTProperties"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)type":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)qos":{"name":"qos","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)retainFlag":{"name":"retainFlag","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)dupFlag":{"name":"dupFlag","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)mid":{"name":"mid","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)data":{"name":"data","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)returnCode":{"name":"returnCode","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)connectAcknowledgeFlags":{"name":"connectAcknowledgeFlags","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)properties":{"name":"properties","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)connectMessageWithClientId:userName:password:keepAlive:cleanSession:will:willTopic:willMsg:willQoS:willRetain:protocolLevel:sessionExpiryInterval:authMethod:authData:requestProblemInformation:willDelayInterval:requestResponseInformation:receiveMaximum:topicAliasMaximum:userProperty:maximumPacketSize:":{"name":"+connectMessageWithClientId:userName:password:keepAlive:cleanSession:will:willTopic:willMsg:willQoS:willRetain:protocolLevel:sessionExpiryInterval:authMethod:authData:requestProblemInformation:willDelayInterval:requestResponseInformation:receiveMaximum:topicAliasMaximum:userProperty:maximumPacketSize:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)pingreqMessage":{"name":"+pingreqMessage","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)disconnectMessage:returnCode:sessionExpiryInterval:reasonString:userProperty:":{"name":"+disconnectMessage:returnCode:sessionExpiryInterval:reasonString:userProperty:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)subscribeMessageWithMessageId:topics:protocolLevel:subscriptionIdentifier:":{"name":"+subscribeMessageWithMessageId:topics:protocolLevel:subscriptionIdentifier:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)unsubscribeMessageWithMessageId:topics:protocolLevel:":{"name":"+unsubscribeMessageWithMessageId:topics:protocolLevel:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)publishMessageWithData:onTopic:qos:msgId:retainFlag:dupFlag:protocolLevel:payloadFormatIndicator:publicationExpiryInterval:topicAlias:responseTopic:correlationData:userProperty:contentType:":{"name":"+publishMessageWithData:onTopic:qos:msgId:retainFlag:dupFlag:protocolLevel:payloadFormatIndicator:publicationExpiryInterval:topicAlias:responseTopic:correlationData:userProperty:contentType:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)pubackMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:":{"name":"+pubackMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)pubrecMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:":{"name":"+pubrecMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)pubrelMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:":{"name":"+pubrelMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)pubcompMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:":{"name":"+pubcompMessageWithMessageId:protocolLevel:returnCode:reasonString:userProperty:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(cm)messageFromData:protocolLevel:":{"name":"+messageFromData:protocolLevel:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(im)initWithType:":{"name":"-initWithType:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(im)initWithType:data:":{"name":"-initWithType:data:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(im)initWithType:qos:data:":{"name":"-initWithType:qos:data:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(im)initWithType:qos:retainFlag:dupFlag:data:":{"name":"-initWithType:qos:retainFlag:dupFlag:data:","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTMessage.html#/c:objc(cs)MQTTMessage(py)wireFormat":{"name":"wireFormat","abstract":"<p>Undocumented</p>","parent_name":"MQTTMessage"},"Classes/MQTTLog.html#/c:objc(cs)MQTTLog(cm)setLogLevel:":{"name":"+setLogLevel:","abstract":"<p>setLogLevel controls the log level for MQTTClient</p>","parent_name":"MQTTLog"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)state":{"name":"state","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)queue":{"name":"queue","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)length":{"name":"length","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)lengthMultiplier":{"name":"lengthMultiplier","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)offset":{"name":"offset","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)dataBuffer":{"name":"dataBuffer","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(im)open":{"name":"-open","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(im)close":{"name":"-close","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTDecoder.html#/c:objc(cs)MQTTDecoder(im)decodeMessage:":{"name":"-decodeMessage:","abstract":"<p>Undocumented</p>","parent_name":"MQTTDecoder"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)streamSSLLevel":{"name":"streamSSLLevel","abstract":"<p>streamSSLLevel an NSString containing the security level for read and write streams</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)host":{"name":"host","abstract":"<p>host an NSString containing the hostName or IP address of the host to connect to</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)port":{"name":"port","abstract":"<p>port an unsigned 32 bit integer containing the IP port number to connect to</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)tls":{"name":"tls","abstract":"<p>tls a boolean indicating whether the transport should be using security </p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)voip":{"name":"voip","abstract":"<p>Require for VoIP background service</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(py)certificates":{"name":"certificates","abstract":"<p>certificates An identity certificate used to reply to a server requiring client certificates according</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketTransport.html#/c:objc(cs)MQTTCFSocketTransport(cm)clientCertsFromP12:passphrase:":{"name":"+clientCertsFromP12:passphrase:","abstract":"<p>reads the content of a PKCS12 file and converts it to an certificates array for initWith&hellip;</p>","parent_name":"MQTTCFSocketTransport"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(py)state":{"name":"state","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(py)error":{"name":"error","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(py)stream":{"name":"stream","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(im)open":{"name":"-open","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(im)close":{"name":"-close","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketEncoder.html#/c:objc(cs)MQTTCFSocketEncoder(im)send:":{"name":"-send:","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketEncoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(py)state":{"name":"state","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(py)error":{"name":"error","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(py)stream":{"name":"stream","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(im)open":{"name":"-open","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/MQTTCFSocketDecoder.html#/c:objc(cs)MQTTCFSocketDecoder(im)close":{"name":"-close","abstract":"<p>Undocumented</p>","parent_name":"MQTTCFSocketDecoder"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)isTemperatureAlertEnabled":{"name":"isTemperatureAlertEnabled","abstract":"<p>Undocumented</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)temperatureAlertUpperLimit":{"name":"temperatureAlertUpperLimit","abstract":"<p>Temperature alert upper limit</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)temperatureAlertLowerLimit":{"name":"temperatureAlertLowerLimit","abstract":"<p>Temperature alert lower limit</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)rssiUpperLimit":{"name":"rssiUpperLimit","abstract":"<p>On-chip RSSI filter upper limit</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)rssiLowerLimit":{"name":"rssiLowerLimit","abstract":"<p>On-chip RSSI filter lower limit</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)sensorType":{"name":"sensorType","abstract":"<p>Temperature sensor type</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)NumberOfRollingAvergage":{"name":"NumberOfRollingAvergage","abstract":"<p>Number of samples on rolling average for temperature values</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)unit":{"name":"unit","abstract":"<p>Temperature Unit being displayed</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)temperatureAveragingBuffer":{"name":"temperatureAveragingBuffer","abstract":"<p>Hold a list of circular queues for each of the tag read</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(py)lastGoodReadBuffer":{"name":"lastGoodReadBuffer","abstract":"<p>Hold a list of last good read timestamp</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(im)setTemperatureValueForAveraging:EPCID:":{"name":"-setTemperatureValueForAveraging:EPCID:","abstract":"<p>This will add the temperature data to the cirular buffer, with buffer size deinfed on the settings page</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(im)getTemperatureValueAveraging:":{"name":"-getTemperatureValueAveraging:","abstract":"<p>Calculate and return the average temperature based on data within the rolling window</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(im)removeTemperatureAverageForEpc:":{"name":"-removeTemperatureAverageForEpc:","abstract":"<p>Remove the temperature data in the circular buffer for a specific tag</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(cm)convertCelciusToFahrenheit:":{"name":"+convertCelciusToFahrenheit:","abstract":"<p>Convert temperature value from Celicus to Fahrenheit</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLTemperatureTagSettings.html#/c:objc(cs)CSLTemperatureTagSettings(cm)convertFahrenheitToCelcius:":{"name":"+convertFahrenheitToCelcius:","abstract":"<p>Convert temperature value from Fahrenheit to Celicus</p>","parent_name":"CSLTemperatureTagSettings"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)reader":{"name":"reader","abstract":"<p>CSLBleReader instance of the connected reader</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)settings":{"name":"settings","abstract":"<p>Reader settings being stored in User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)readerInfo":{"name":"readerInfo","abstract":"<p>Technical details of the connected reader</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)tagSelected":{"name":"tagSelected","abstract":"<p>Tag selected for tag read/write/search</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)CSLBleTagSelected":{"name":"CSLBleTagSelected","abstract":"<p>Tag selected for tag read/write/search</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)isBarcodeMode":{"name":"isBarcodeMode","abstract":"<p>Defines the current reader mode (RFID/Barcode)</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)MQTTSettings":{"name":"MQTTSettings","abstract":"<p>Reader settings on MQTT broker</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)temperatureSettings":{"name":"temperatureSettings","abstract":"<p>Reader settings for temperature tags</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)sharedAppEngine":{"name":"+sharedAppEngine","abstract":"<p>Initialize the app engine</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)alloc":{"name":"+alloc","abstract":"<p>Memory allocation of the singleton class</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)destroy":{"name":"+destroy","abstract":"<p>Release the singleton class</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)init":{"name":"-init","abstract":"<p>Initializing instances for: (1) CSLBleReader (2) CSLReaderSettings (3) CSLReaderInfo</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc (not in use)</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)reloadSettingsFromUserDefaults":{"name":"-reloadSettingsFromUserDefaults","abstract":"<p>Load settings from User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)saveSettingsToUserDefaults":{"name":"-saveSettingsToUserDefaults","abstract":"<p>Save current settings to User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)reloadMQTTSettingsFromUserDefaults":{"name":"-reloadMQTTSettingsFromUserDefaults","abstract":"<p>Load MQTT settings from User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)saveMQTTSettingsToUserDefaults":{"name":"-saveMQTTSettingsToUserDefaults","abstract":"<p>Save current MQTT settings to User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)reloadTemperatureTagSettingsFromUserDefaults":{"name":"-reloadTemperatureTagSettingsFromUserDefaults","abstract":"<p>Load temperature tag settings from User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)saveTemperatureTagSettingsToUserDefaults":{"name":"-saveTemperatureTagSettingsToUserDefaults","abstract":"<p>Save current temperature tag settings to User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)soundAlert:":{"name":"-soundAlert:","abstract":"<p>Play iOS default sound alerts</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)power":{"name":"power","abstract":"<p>Reader output power</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)tagPopulation":{"name":"tagPopulation","abstract":"<p>Estimated tag population in the reading environment</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)isQOverride":{"name":"isQOverride","abstract":"<p>Enable/disable Q overriding, where Q should be defined manually or calcuated based on the estimated tag population</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)QValue":{"name":"QValue","abstract":"<p>User defined, or calculated Q value</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)session":{"name":"session","abstract":"<p>Query session</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)target":{"name":"target","abstract":"<p>Query target</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)algorithm":{"name":"algorithm","abstract":"<p>Query algorithm</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)linkProfile":{"name":"linkProfile","abstract":"<p>Link profile selected</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)enableSound":{"name":"enableSound","abstract":"<p>Define whether sound alert is enabled/disabled</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)isMultibank1Enabled":{"name":"isMultibank1Enabled","abstract":"<p>Enable/disable multibank bank 1</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank1":{"name":"multibank1","abstract":"<p>Define multibank bank1</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank1Offset":{"name":"multibank1Offset","abstract":"<p>Multibank bank1 Offset</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank1Length":{"name":"multibank1Length","abstract":"<p>Multibank bank1 Length</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)isMultibank2Enabled":{"name":"isMultibank2Enabled","abstract":"<p>Enable/disable multibank bank 2</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank2":{"name":"multibank2","abstract":"<p>Define multibank bank 2</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank2Offset":{"name":"multibank2Offset","abstract":"<p>Multibank bank1 Offset</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)multibank2Length":{"name":"multibank2Length","abstract":"<p>Multibank bank1 Length</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)appVersion":{"name":"appVersion","abstract":"<p>Applicatino version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)BtFirmwareVersion":{"name":"BtFirmwareVersion","abstract":"<p>Bluetooth IC firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)RfidFirmwareVersion":{"name":"RfidFirmwareVersion","abstract":"<p>RFID firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)SiLabICFirmwareVersion":{"name":"SiLabICFirmwareVersion","abstract":"<p>Silicon Lab IC firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)deviceSerialNumber":{"name":"deviceSerialNumber","abstract":"<p>Reader 13-character serial number</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)pcbBoardVersion":{"name":"pcbBoardVersion","abstract":"<p>PCB board version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)batteryPercentage":{"name":"batteryPercentage","abstract":"<p>Reader current battery level percentage</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)initWithPcBVersion:":{"name":"-initWithPcBVersion:","abstract":"<p>As battery level curve selected is depended on PCB version, initialize the instance with current PCB version</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)setPcbVersion:":{"name":"-setPcbVersion:","abstract":"<p>Report the PCB version of the connected reader</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)setBatteryMode:":{"name":"-setBatteryMode:","abstract":"<p>Set battery mode (idle/inventory)</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)getBatteryPercentageByVoltage:":{"name":"-getBatteryPercentageByVoltage:","abstract":"<p>Get the battery level in percentage by voltage</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)serialData":{"name":"serialData","abstract":"<p>Serial data returned by the barcode module</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)barcodeValue":{"name":"barcodeValue","abstract":"<p>Barcode value extract from serial data</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)codeId":{"name":"codeId","abstract":"<p>Code ID representing the barcode type</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)aimId":{"name":"aimId","abstract":"<p>AIM ID</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)initWithSerialData:":{"name":"-initWithSerialData:","abstract":"<p>Initialize the instance with serial data returned from the barcode reader</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)extractBarcodeFromSerialData":{"name":"-extractBarcodeFromSerialData","abstract":"<p>Extract barcode information from serial data returned by the barcode module</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(cm)convertDataToHexString:":{"name":"+convertDataToHexString:","abstract":"<p>Convert serial data to hexdecimal string</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(cm)convertHexStringToAscii:":{"name":"+convertHexStringToAscii:","abstract":"<p>Convert hexdecimal string to ASCII string</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)isMQTTEnabled":{"name":"isMQTTEnabled","abstract":"<p>MQTT enable/disable</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)brokerAddress":{"name":"brokerAddress","abstract":"<p>MQTT broker address</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)brokerPort":{"name":"brokerPort","abstract":"<p>MQTT broker port</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)clientId":{"name":"clientId","abstract":"<p>Client ID</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)userName":{"name":"userName","abstract":"<p>User Name for server authentication</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)password":{"name":"password","abstract":"<p>Password for server authentication</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)isTLSEnabled":{"name":"isTLSEnabled","abstract":"<p>Enable TLS Encryption (assume using CA signed server certificate)</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)QoS":{"name":"QoS","abstract":"<p>LWT setting - QoS value</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)retained":{"name":"retained","abstract":"<p>LWT setting - retaind messages</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)mqttStatus":{"name":"mqttStatus","abstract":"<p>MQTT connection status</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(py)publishTopicCounter":{"name":"publishTopicCounter","abstract":"<p>MQTT submission counter</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(im)connectToMQTTBroker:":{"name":"-connectToMQTTBroker:","abstract":"<p>Connect to MQTT broker</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLMQTTSettings.html#/c:objc(cs)CSLMQTTSettings(im)publishData:onTopic:":{"name":"-publishData:onTopic:","abstract":"<p>Pulbish data to a defined topic</p>","parent_name":"CSLMQTTSettings"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(py)capacity":{"name":"capacity","abstract":"<p>Define the maximum number of elements that the instance can hold</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(py)count":{"name":"count","abstract":"<p>Number of element that the instance is holding</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)initWithCapacity:":{"name":"-initWithCapacity:","abstract":"<p>Initializing the instance with a defined capacity</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)enqObject:":{"name":"-enqObject:","abstract":"<p>Enqueu object into the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)deqObject":{"name":"-deqObject","abstract":"<p>Dnqueu object from the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)objectAtIndex:":{"name":"-objectAtIndex:","abstract":"<p>Return reference to a specific object in the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)removeAllObjects":{"name":"-removeAllObjects","abstract":"<p>Remove all objects in queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)calculateRollingAverage":{"name":"-calculateRollingAverage","abstract":"<p>Calculate the rolling average of the tag search RSSI</p>","parent_name":"CSLCircularQueue"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)PC":{"name":"PC","abstract":"<p>Protocol Control bits</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)EPC":{"name":"EPC","abstract":"<p>EPC data string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA1":{"name":"DATA1","abstract":"<p>DATA1 string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA1Length":{"name":"DATA1Length","abstract":"<p>DATA1 length</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA2":{"name":"DATA2","abstract":"<p>DATA2 string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA2Length":{"name":"DATA2Length","abstract":"<p>DATA2 length</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)rssi":{"name":"rssi","abstract":"<p>Return RRSI of the tag response</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)timestamp":{"name":"timestamp","abstract":"<p>Return timestamp of the tag readtime</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)CRCError":{"name":"CRCError","abstract":"<p>CRC error flag</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)AccessCommand":{"name":"AccessCommand","abstract":"<p>command of the tag access operation</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)BackScatterError":{"name":"BackScatterError","abstract":"<p>Backscatter error flag with 0=no error, otherwise it represents the error code</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)ACKTimeout":{"name":"ACKTimeout","abstract":"<p>ACK timeout flag</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)portNumber":{"name":"portNumber","abstract":"<p>Antenna port tag being returned</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)AccessError":{"name":"AccessError","abstract":"<p>Access Operation error flag with 0=no error, otherwise it represents the error code</p>","parent_name":"CSLBleTag"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)filteredBuffer":{"name":"filteredBuffer","abstract":"<p>This is a buffer for all the tags that have been sorted with all duplicates removed.","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)rangingTagCount":{"name":"rangingTagCount","abstract":"<p>This property holds the number of tags being read.  It is reset within a specific time interval (1 second by default)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)uniqueTagCount":{"name":"uniqueTagCount","abstract":"<p>This property holds the number of unique tags being read.  It is reset within a specific time interval (1 second by default)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)batteryInfo":{"name":"batteryInfo","abstract":"<p>Enumeration type that holds the battery status information.  Its value is is being updated by a scheduled timer when batteery level notifications return on every 5 seconds</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)isTagAccessMode":{"name":"isTagAccessMode","abstract":"<p>This property indicates if the reader is either in tag access or inventory mode</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)cmdRespQueue":{"name":"cmdRespQueue","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)readerDelegate":{"name":"readerDelegate","abstract":"<p>Delegate instance that follows the CSLBleReaderDelegate protocol</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(cm)convertHexStringToData:":{"name":"+convertHexStringToData:","abstract":"<p>Static method that converts hexdcecimal string to binary data</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(cm)convertDataToHexString:":{"name":"+convertDataToHexString:","abstract":"<p>Static method that converts binary data to hexdcecimal string</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)init":{"name":"-init","abstract":"<p>initialization selector that:</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc selector that:</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)readOEMData:atAddr:forData:":{"name":"-readOEMData:atAddr:forData:","abstract":"<p>Read OEM data that contains product-specific information such as country code, antenna version and frequency channel information</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)barcodeReader:":{"name":"-barcodeReader:","abstract":"<p>Enable/disable barcode reader</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startBarcodeReading":{"name":"-startBarcodeReading","abstract":"<p>Start barcode reading continuously</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopBarcodeReading":{"name":"-stopBarcodeReading","abstract":"<p>Stop barcode reading</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendBarcodeCommandData:":{"name":"-sendBarcodeCommandData:","abstract":"<p>Send serial command to barcode reader module</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)powerOnRfid:":{"name":"-powerOnRfid:","abstract":"<p>Power on/off RFID module</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getBtFirmwareVersion:":{"name":"-getBtFirmwareVersion:","abstract":"<p>Obtain Bluetooth firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getConnectedDeviceName:":{"name":"-getConnectedDeviceName:","abstract":"<p>Obtain device name (name showing up during device discovery)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getSilLabIcVersion:":{"name":"-getSilLabIcVersion:","abstract":"<p>Obtain Silicon Lab IC firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getRfidBrdSerialNumber:":{"name":"-getRfidBrdSerialNumber:","abstract":"<p>Obtain RFID board serial number</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getPcBBoardVersion:":{"name":"-getPcBBoardVersion:","abstract":"<p>Obtain PCB board version information</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendAbortCommand":{"name":"-sendAbortCommand","abstract":"<p>Send abort command to the device for stopping RFID operations (e.g. inventory, tag read/write, etc.)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startBatteryAutoReporting":{"name":"-startBatteryAutoReporting","abstract":"<p>Start battery level reporting (notification every 5 seconds)","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopBatteryAutoReporting":{"name":"-stopBatteryAutoReporting","abstract":"<p>Stop battery level reporting (notification every 5 seconds)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getRfidFwVersionNumber:":{"name":"-getRfidFwVersionNumber:","abstract":"<p>Obtain RFID module firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setPower:":{"name":"-setPower:","abstract":"<p>Set output power of the reader</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setAntennaCycle:":{"name":"-setAntennaCycle:","abstract":"<p>Set antenna cycle</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setAntennaDwell:":{"name":"-setAntennaDwell:","abstract":"<p>Set antenna dwell time</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setLinkProfile:":{"name":"-setLinkProfile:","abstract":"<p>Set link profile from the four selections</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectAlgorithmParameter:":{"name":"-selectAlgorithmParameter:","abstract":"<p>Select which set of algorithm parameter registers to access.</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters0:maximumQ:minimumQ:ThresholdMultiplier:":{"name":"-setInventoryAlgorithmParameters0:maximumQ:minimumQ:ThresholdMultiplier:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters1:":{"name":"-setInventoryAlgorithmParameters1:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters2:RunTillZero:":{"name":"-setInventoryAlgorithmParameters2:RunTillZero:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryConfigurations:MatchRepeats:tagSelect:disableInventory:tagRead:crcErrorRead:QTMode:tagDelay:inventoryMode:":{"name":"-setInventoryConfigurations:MatchRepeats:tagSelect:disableInventory:tagRead:crcErrorRead:QTMode:tagDelay:inventoryMode:","abstract":"<p>Inventory configuration. Configure parameters used in underlying inventory operations</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setQueryConfigurations:querySession:querySelect:":{"name":"-setQueryConfigurations:querySession:querySelect:","abstract":"<p>Configure parameters used in underlying Query and inventory operations.</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startInventory":{"name":"-startInventory","abstract":"<p>Start Inventory asynchornously</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopInventory":{"name":"-stopInventory","abstract":"<p>Stop Inventory</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)decodePacketsInBufferAsync":{"name":"-decodePacketsInBufferAsync","abstract":"<p>Start the data packet decoding routine, where a selector will be running on a background thread and decode the received packet if commands were being sent out previously.  Results will be returned to the recvQueue (for asynchornous commands)  and to cmdRespQueue (for synchronous commands)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setParametersForTagAccess":{"name":"-setParametersForTagAccess","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_DESC_SEL:":{"name":"-TAGMSK_DESC_SEL:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_DESC_CFG:selectTarget:selectAction:":{"name":"-TAGMSK_DESC_CFG:selectTarget:selectAction:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_BANK:":{"name":"-TAGMSK_BANK:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_PTR:":{"name":"-TAGMSK_PTR:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_LEN:":{"name":"-TAGMSK_LEN:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setTAGMSK:tagMask:":{"name":"-setTAGMSK:tagMask:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_BANK:acc_bank2:":{"name":"-TAGACC_BANK:acc_bank2:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_PTR:":{"name":"-TAGACC_PTR:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_PTR:secondBank:":{"name":"-TAGACC_PTR:secondBank:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_CNT:secondBank:":{"name":"-TAGACC_CNT:secondBank:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_ACCPWD:":{"name":"-TAGACC_ACCPWD:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setTAGWRDAT:data_word:data_offset:":{"name":"-setTAGWRDAT:data_word:data_offset:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_DESC_CFG:retryCount:":{"name":"-TAGACC_DESC_CFG:retryCount:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_LOCKCFG:":{"name":"-TAGACC_LOCKCFG:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandRead":{"name":"-sendHostCommandRead","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandWrite":{"name":"-sendHostCommandWrite","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandSearch":{"name":"-sendHostCommandSearch","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandLock":{"name":"-sendHostCommandLock","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectTag:maskPointer:maskLength:maskData:":{"name":"-selectTag:maskPointer:maskLength:maskData:","abstract":"<p>Select tag before tag access (read/write) operation</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectTagForSearch:maskPointer:maskLength:maskData:":{"name":"-selectTagForSearch:maskPointer:maskLength:maskData:","abstract":"<p>Select tag before tag access (search) operation</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryRead:dataOffset:dataCount:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryRead:dataOffset:dataCount:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag read command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryWrite:dataOffset:dataCount:writeData:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryWrite:dataOffset:dataCount:writeData:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag write command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryLock:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryLock:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag security command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagSearch:maskPointer:maskLength:maskData:":{"name":"-startTagSearch:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag search command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopTagSearch":{"name":"-stopTagSearch","abstract":"<p>Stop singular tag search</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectTagForInventory:maskPointer:maskLength:maskData:sel_action:":{"name":"-selectTagForInventory:maskPointer:maskLength:maskData:sel_action:","abstract":"<p>Select tag before tag inventory operation</p>","parent_name":"CSLBleReader"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)prefix":{"name":"prefix","abstract":"<p>prefix (0xA0)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)connection":{"name":"connection","abstract":"<p>Connection type (USB/Bluetooth)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)payloadLength":{"name":"payloadLength","abstract":"<p>Payload length 1 to 120</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)deviceId":{"name":"deviceId","abstract":"<p>Destination/Source (RFID/Barcode/Notification/Silicon Lab IC/Bluetooth IC)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)Reserve":{"name":"Reserve","abstract":"<p>Reserved byte. 0x82 in most cases, or the sequence number of data stream</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)direction":{"name":"direction","abstract":"<p>Direction (downlink/uplink)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)crc1":{"name":"crc1","abstract":"<p>CRC of data packet (byte 1)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)crc2":{"name":"crc2","abstract":"<p>CRC of data packet (byte 2)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)payload":{"name":"payload","abstract":"<p>payload of data packet (first two bytes would be event code)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(im)getPacketInHexString":{"name":"-getPacketInHexString","abstract":"<p>Return serialized packet data in hexdecimal string</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(im)getPacketPayloadInHexString":{"name":"-getPacketPayloadInHexString","abstract":"<p>Return serialized packet payload in hexdecimal string</p>","parent_name":"CSLBlePacket"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface@connectStatus":{"name":"connectStatus","abstract":"<p>Reader connection status</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)deviceName":{"name":"deviceName","abstract":"<p>Once reader is connect, the device name obtained during the discovery process will be stored in this property.</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)LastException":{"name":"LastException","abstract":"<p>Last exception being returned, if any.</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)bleDeviceList":{"name":"bleDeviceList","abstract":"<p>Array of CBPeripheral object after device discovery</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)bleDevice":{"name":"bleDevice","abstract":"<p>Connected BLE device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)recvQueue":{"name":"recvQueue","abstract":"<p>Queue for the data packets returned</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)connectStatus":{"name":"connectStatus","abstract":"<p>Property for the connection status that is read-only</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)delegate":{"name":"delegate","abstract":"<p>instance of the CSLBleInterfaceDelegate delegate</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)init":{"name":"-init","abstract":"<p>initialization selector that:</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc selector that release selector to the delegates</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)startScanDevice":{"name":"-startScanDevice","abstract":"<p>Start scanning for readers in the environment</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)stopScanDevice":{"name":"-stopScanDevice","abstract":"<p>Stop scanning for readers in the environment</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)connectDevice:":{"name":"-connectDevice:","abstract":"<p>Connect to device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)disconnectDevice":{"name":"-disconnectDevice","abstract":"<p>Disconnect device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)isLECapableHardware":{"name":"-isLECapableHardware","abstract":"<p>Check if device returned is a Bluetooth LE compatiable hardware</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)sendPackets:":{"name":"-sendPackets:","abstract":"<p>Send downlink data packet to reader</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)computeChecksum:":{"name":"-computeChecksum:","abstract":"<p>Calculate checksum of the data</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html":{"name":"CSLBleInterface","abstract":"<p>Low-level Bluetooth LE communication using Apple Core Bluetooth framework</p>"},"Classes/CSLBlePacket.html":{"name":"CSLBlePacket","abstract":"<p>Data information of a Bluetooth LE packet</p>"},"Classes/CSLBleReader.html":{"name":"CSLBleReader","abstract":"<p>This object class holds the core function of the reader API and it allows developers to configure and control the device being connnected."},"Classes/CSLBleTag.html":{"name":"CSLBleTag","abstract":"<p>Tag data information</p>"},"Classes/CSLCircularQueue.html":{"name":"CSLCircularQueue","abstract":"<p>Circular queue for storing tag response data</p>"},"Classes/CSLMQTTSettings.html":{"name":"CSLMQTTSettings","abstract":"<p>Undocumented</p>"},"Classes/CSLReaderBarcode.html":{"name":"CSLReaderBarcode","abstract":"<p>Barcode reader operations and data management</p>"},"Classes/CSLReaderBattery.html":{"name":"CSLReaderBattery","abstract":"<p>Reader battery level monitoring</p>"},"Classes/CSLReaderInfo.html":{"name":"CSLReaderInfo","abstract":"<p>Information of the connected reader</p>"},"Classes/CSLReaderSettings.html":{"name":"CSLReaderSettings","abstract":"<p>Reader Settings</p>"},"Classes/CSLRfidAppEngine.html":{"name":"CSLRfidAppEngine","abstract":"<p>Singleton class that handles all activities on the reader.  It provides a centralize point and allows data to be moved across different controllers</p>"},"Classes/CSLTemperatureTagSettings.html":{"name":"CSLTemperatureTagSettings","abstract":"<p>Undocumented</p>"},"Classes/MQTTCFSocketDecoder.html":{"name":"MQTTCFSocketDecoder","abstract":"<p>Undocumented</p>"},"Classes/MQTTCFSocketEncoder.html":{"name":"MQTTCFSocketEncoder","abstract":"<p>Undocumented</p>"},"Classes/MQTTCFSocketTransport.html":{"name":"MQTTCFSocketTransport","abstract":"<p>MQTTCFSocketTransport</p>"},"Classes.html#/c:objc(cs)MQTTCoreDataPersistence":{"name":"MQTTCoreDataPersistence","abstract":"<p>Undocumented</p>"},"Classes.html#/c:objc(cs)MQTTFlow":{"name":"MQTTFlow","abstract":"<p>Undocumented</p>"},"Classes.html#/c:objc(cs)MQTTCoreDataFlow":{"name":"MQTTCoreDataFlow","abstract":"<p>Undocumented</p>"},"Classes/MQTTDecoder.html":{"name":"MQTTDecoder","abstract":"<p>Undocumented</p>"},"Classes/MQTTLog.html":{"name":"MQTTLog","abstract":"<p>MQTTLog lets you define the log level for MQTTClient</p>"},"Classes/MQTTMessage.html":{"name":"MQTTMessage","abstract":"<p>Undocumented</p>"},"Classes/MQTTProperties.html":{"name":"MQTTProperties","abstract":"<p>Undocumented</p>"},"Classes/MQTTSSLSecurityPolicy.html":{"name":"MQTTSSLSecurityPolicy","abstract":"<p><code>MQTTSSLSecurityPolicy</code> evaluates server trust against pinned X.509 certificates and public keys over secure connections.</p>"},"Classes/MQTTSSLSecurityPolicyTransport.html":{"name":"MQTTSSLSecurityPolicyTransport","abstract":"<p>MQTTSSLSecurityPolicyTransport</p>"},"Classes/MQTTSession.html":{"name":"MQTTSession","abstract":"<p>Session implements the MQTT protocol for your application"},"Classes/MQTTSessionManager.html":{"name":"MQTTSessionManager","abstract":"<p>SessionManager handles the MQTT session for your application</p>"},"Classes.html#/c:objc(cs)MQTTTransport":{"name":"MQTTTransport","abstract":"<p>Undocumented</p>"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendByte:":{"name":"-appendByte:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendUInt16BigEndian:":{"name":"-appendUInt16BigEndian:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendUInt32BigEndian:":{"name":"-appendUInt32BigEndian:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendVariableLength:":{"name":"-appendVariableLength:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendMQTTString:":{"name":"-appendMQTTString:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html#/c:objc(cs)NSMutableData(im)appendBinaryData:":{"name":"-appendBinaryData:","abstract":"<p>Undocumented</p>","parent_name":"NSMutableData(MQTT)"},"Categories/NSMutableData(MQTT).html":{"name":"NSMutableData(MQTT)","abstract":"<p>Undocumented</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"}}